---
title: "Chelsea's Quarto"
author: "Chelsea Sanford"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(sf)
library(terra)
library(tidyterra)
library(dplyr)
```

### Load in the Data

```{r}
ca_counties_raw_sf <- read_sf(here("data/ca_counties/CA_Counties_TIGER2016.shp"))
socioeco_data <- read.csv(here('data/socioeco.csv'))
# water_quality <- read_csv(here('data/water_quality.csv'))
```

############################################## CES + County Data

### Edit the CES data

```{r}
# group by county and return the columns listed, averaged
socio_by_county <- socioeco_data %>% 
  dplyr::group_by(california_county) %>% 
  summarize(ces = mean(ces_4_0_percentile, na.rm = TRUE),
            low_birth_weight = mean(low_birth_weight_pctl, na.rm = TRUE),
            cardio_disease = mean(cardiovascular_disease_pctl, na.rm = TRUE),
            education = mean(education_pctl, na.rm = TRUE),
            poverty = mean(poverty_pctl, na.rm = TRUE),
            unemployment = mean(unemployment_pctl, na.rm = TRUE))

# create a new 'county' column
socio_by_county$county <- socio_by_county$california_county 

# remove 'california_county' column, put it first, and clean the county names (remove spaces)
socio_county <- socio_by_county %>% 
  select(-california_county) %>% 
  select(county, everything()) %>% 
  mutate(county = str_squish(county)) %>% 
  filter(county %in% c('Imperial', 'Kern', 'Los Angeles', 
                                'Orange', 'Riverside', 'San Bernardino',
                                'San Diego', 'San Luis Obispo', 'Santa Barbara', 'Ventura'))
```

### Create CA County Map and Overlay CES Score Data

What counties have the highest CES score?

```{r}
### counties data
ca_counties_sf <- ca_counties_raw_sf %>% 
  janitor::clean_names() %>%
  mutate(land_km2 = aland / 1e6) %>%
  select(county = name, land_km2) %>% 
  mutate(county = str_squish(county)) %>% 
  filter(county %in% c('Imperial', 'Kern', 'Los Angeles', 
                                'Orange', 'Riverside', 'San Bernardino',
                                'San Diego', 'San Luis Obispo', 'Santa Barbara', 'Ventura'))
#ca_counties_sf %>% st_crs() ###3857

### join the two together
county_socio_join <- merge(x = ca_counties_sf, y = socio_county, by = "county", all.x = TRUE) %>% 
  select('county', everything(), -'land_km2') %>%
  pivot_longer('ces':'unemployment', names_to = 'parameter', values_to = 'percentile')

### ggplot
pop_plot <- ggplot(data = county_socio_join) +
  geom_sf(aes(fill = percentile, geometry = geometry), color = "white", size = 0.1) +
  scale_fill_gradientn(colors = c("lightgray", "orange","red")) +
  theme_void() +
  labs(fill = "Population Density")

# plot(pop_plot)
```

################################### Tab 4 Row 2 - Graphs

```{r}
### bar graph comparing counts by county
socio_pivot <- socio_county %>% 
  pivot_longer('ces':'unemployment', names_to = 'indicator', values_to = 'percentile') %>% 
  mutate(county = as.factor(county))

poverty_cardio_plot <-  ggplot(data = socio_pivot, 
                              aes(x = reorder(county, -percentile), y = percentile, fill = percentile)) +
        geom_col(color = "black") +
        scale_fill_gradientn(colors = c("lightgray", "orange","red")) + 
        labs(x = 'County', y = 'Percentile', fill = "Percentile") +
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
              legend.position = 'none') +
        theme(axis.text = element_text(size = 15))

poverty_cardio_plot
```

######################################## Water Quality + CES

Groundwater Quality vs Poverty Score Questions we want to ask: Is the poverty score a good indicator of water quality? compare using NLS

```{r}
# # convert water quality to sf 
# water_quality_sf <- st_as_sf(x = water_quality, 
#                              coords = c('longitude', 'latitude'), 
#                              crs = 4326)
# 
# water_quality_sf <- st_transform(water_quality_sf, 3857)
# 
# 
# # combine water quality and county data 
# county_water <- st_join(ca_counties_sf, water_quality_sf)
# 
# county_water_year <- county_water %>%
#   drop_na() %>% 
#   separate(date, c("year", "month", "day")) %>% 
#   select(-month, -day, -land_km2) 
# 
# county_water_pivot <- county_water_year %>% 
#   group_by(year, county, chemical) %>%
#   summarize(mean_measurement = mean(measurement, na.rm = TRUE)) %>%
#   pivot_wider(names_from = chemical, values_from = mean_measurement) %>% 
#   janitor::clean_names()

# co3_plot <- ggplot(data = county_water_pivot) +
#   geom_sf(aes(fill = alkalinity_as_ca_co3, geometry = geometry), color = "white", size = 0.1) +
#   scale_fill_gradientn(colors = c("lightgray","orange","red")) +
#   theme_void() +
#   labs(fill = "Average CO3")
# 
# co3_plot
```

######################################### ShinyApp \### Attach necessary packages

```{r}
library(shiny)
library(tidyverse)
library(bslib)
```

### Create the user interface:

```{r}
# vector <- c('total_pop', 'ces', 'low_birth_weight', 'cardio_disease', 'education', 'poverty', 'unemplpoyment')

ui <- fluidPage(
  theme = bs_theme(bootswatch = 'minty'),
  
  titlePanel('California Groundwater'),
  tabsetPanel(
    
    tabPanel( ### start tab 4
      title = 'Environmental Justice',
      
      includeMarkdown('tab4.md'),
      
      fluidRow( # start fluid row 4.1
      column(width = 5,
                    h4('Socioeconomic Indicator'),
                    radioButtons(
                      inputId = 'factor_4_1',
                      label = ' ',
                      choices = c('Low Birth Weight' = 'low_birth_weight', 
                                  'Cardiovascular Disease' = 'cardio_disease', 
                                  'Education' = 'education', 
                                  'Poverty' = 'poverty', 
                                  'Unemplpoyment' = 'unemployment',
                                  'CES Score' = 'ces')
                    ) ### end radioButtons
        ), ### end column
        column(width = 7,
                    h4('Map of California Counties'),
                    plotOutput(outputId = 'pop_plot')
        ) ### end column
      ), ### end fluidRow 4.1
      
      hr(), ### horizontal rule so the row breaks are easier to see
      p('talk about how they should look at the map'),
      hr(),
      
      fluidRow( # start fluid row 4.2
        column(
          width = 5,
          h4('Indicator'),
          radioButtons(
            inputId = 'factor_4_2',
            label = ' ',
            choices = c('Low Birth Weight' = 'low_birth_weight', 
                                  'Cardiovascular Disease' = 'cardio_disease', 
                                  'Education' = 'education', 
                                  'Poverty' = 'poverty', 
                                  'Unemplpoyment' = 'unemployment',
                                  'CES Score' = 'ces')
          ) ### end radioButtons
        ), ### end column
        column(
          width = 7,
          h4('Indicators Across Counties'),
          plotOutput(outputId = 'poverty_cardio_plot')
        ) ### end column
      ) ### end fluidRow 4.2
    ) ### end tab 4
  ) ### end tabset panel
) ### end fluidPage
```

### Create the server function:

```{r}
server <- function(input, output) {
  
### START tab 4, row 1
  soc_select <- reactive({ ### start soc_select
    soc_df <- county_socio_join %>% 
      filter(parameter == input$factor_4_1)
    return(soc_df)
  }) ### end soc_select
  
    output$pop_plot <- renderPlot({ ### start ces_plot
       ggplot(data = soc_select()) +
        geom_sf(aes(fill = percentile, geometry = geometry), color = "white", size = 0.1) +
        labs(fill = "Percentile") +
        scale_fill_gradientn(colors = c("lightgray", "orange","red")) +
        theme_void() 
      
 }) ### end ces_plot
### END tab 4, row 1
    
### START tab 4, row 2
  soc_bar <- reactive({ ### start soc_bar
    soc_df_bar <- socio_pivot %>% 
      filter(indicator == input$factor_4_2)
    return(soc_df_bar)
  }) ### end soc_bar
  
    output$poverty_cardio_plot <- renderPlot({ ### start poverty_cardio_plot
      ggplot(data = soc_bar(), 
                              aes(x = reorder(county, -percentile), y = percentile, fill = percentile)) +
        geom_col(color = "black") +
        scale_fill_gradientn(colors = c("lightgray", "orange","red")) + 
        labs(x = 'County', y = 'Percentile', fill = "Percentile") +
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
              legend.position = 'none') +
        theme(text = element_text(size = 15))
      
 }) ### end poverty_cardio_plot
### END tab 4, row 2
}
```

### Combine them into an app:

```{r}
shinyApp(ui = ui, server = server)
```

### Home Page

### Groundwater depth levels

### Chemicals

### Socioeconomic

### groundwater dependent ecosystems ?
